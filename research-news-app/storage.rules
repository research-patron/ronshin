rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidFileSize(maxSizeMB) {
      return request.resource.size <= maxSizeMB * 1024 * 1024;
    }
    
    function isValidPDF() {
      return request.resource.contentType.matches('application/pdf');
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    // Papers storage
    match /papers/{userId}/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && isValidPDF() && isValidFileSize(20);
    }
    
    // Figures storage
    match /figures/{paperId}/{figureId} {
      allow read: if isAuthenticated();
      allow write: if false; // Server-side only
    }
    
    // Tables storage
    match /tables/{paperId}/{tableId} {
      allow read: if isAuthenticated();
      allow write: if false; // Server-side only
    }
    
    // Newspapers storage
    match /newspapers/{newspaperId}/{file} {
      allow read: if true; // Public access for generated newspapers
      allow write: if false; // Server-side only
    }
    
    // Logos storage
    match /logos/{userId}/{filename} {
      allow read: if true;
      allow write: if isOwner(userId) && isValidImage() && isValidFileSize(5);
    }
    
    // Templates storage
    match /templates/{templateId}/{file} {
      allow read: if true;
      allow write: if false; // Admin only
    }
    
    // System backups
    match /system/backups/{path=**} {
      allow read: if false;
      allow write: if false; // Server-side only
    }
  }
}